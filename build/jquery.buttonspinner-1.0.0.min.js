/**
 * jQuery ButtonSpinner - v1.0.0
 * A jQuery plugin for feedback spinner inside a button, using spin.js.
 * https://github.com/endorama/jquery.buttonspinner
 *
 * Made by Edoardo Tenani (https://github.com/endorama)
 * (c) 2013 - Edoardo Tenani
 * Under MIT License
 */
!function(a){function b(b,d){function e(){i.data("buttonspinner",j),i.addClass("button-spinner"),k.length||(i.html('<span class="button-spinner-label">'+i.html()+"</span>"),k=a(".button-spinner-label",i))}function f(){j.old_html=i.html(),i.data("buttonspinner",j),k.css("display","none"),i.css({height:i.outerHeight(),width:i.outerWidth()}).addClass("spinning disabled").spin({lines:8,length:3,radius:5})}function g(){i.spin(!1).removeClass("spinning disabled"),k.css("display","inline"),delete j.old_html,i.data("buttonspinner",j)}function h(){i.each(function(){var b=a(this);b.css({height:"",width:""}).removeClass("button-spinner").html(k.html()),b.removeData("plugin_"+c),b.removeData(c)})}var i=a(b),j={},k=a(".button-spinner-label",i);return d=a.extend({},a.fn[c].defaults,d),e(),{destroy:h,start:f,stop:g}}var c="buttonspinner";a.fn[c]=function(d){if("string"==typeof arguments[0]){var e,f=arguments[0],g=Array.prototype.slice.call(arguments,1);return this.each(function(){if(!a.data(this,"plugin_"+c)||"function"!=typeof a.data(this,"plugin_"+c)[f])throw new Error("Method "+f+" does not exist on jQuery."+c);e=a.data(this,"plugin_"+c)[f].apply(this,g)}),void 0!==e?e:this}return"object"!=typeof d&&d?void 0:this.each(function(){a.data(this,"plugin_"+c)||a.data(this,"plugin_"+c,new b(this,d))})},a.fn[c].defaults={}}(jQuery);